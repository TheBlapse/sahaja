<nav
  class="fixed top-0 w-full py-3 mt-4 flex justify-center items-center dark:bg-darkbg bg-lightbg bg-opacity-10 dark:bg-opacity-5 backdrop-blur-md"
>
  <div
    class="flex flex-row align-middle justify-between px-3 md:px-0 items-start max-w-screen-sm w-full"
  >
    <h1
      class="text-lg md:text-xl text-lightheading dark:text-darkheading font-medium"
    >
      <a href="/">Sehaj Pasricha.</a>
    </h1>
    <ul
      class="nav-links flex flex-row gap-4 dark:text-darktext text-lighttext items-center text-sm md:text-base"
    >
      <button class="mobile-menu block md:hidden">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="16"
          height="16"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="1.5"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-menu"
        >
          <line x1="4" x2="20" y1="12" y2="12"></line>
          <line x1="4" x2="20" y1="6" y2="6"></line>
          <line x1="4" x2="20" y1="18" y2="18"></line>
        </svg>
      </button>
      <button id="theme-switcher">
        <span id="theme-icon" class="dark:stroke-darktext stroke-lighttext"
          ><svg
            xmlns="http://www.w3.org/2000/svg"
            width="18"
            height="18"
            viewBox="0 0 24 24"
            fill="none"
            ><path
              d="M2 20H22M5 4H19C20.1046 4 21 4.89543 21 6V14C21 15.1046 20.1046 16 19 16H5C3.89543 16 3 15.1046 3 14V6C3 4.89543 3.89543 4 5 4Z"
              stroke-width="1.5"
              stroke-linecap="round"
              stroke-linejoin="round"></path></svg
          ></span
        >
      </button>
    </ul>
  </div>
</nav>

<!-- Mobile Menu -->
<div
  class="absolute top-0 z-[5555] max-h-screen h-full w-screen hidden flex-row items-start justify-center bg-lightbg dark:bg-darkbg"
  id="mobile-menu-hidden"
>
  <ul
    class="nav-links-mobile w-full flex flex-col gap-4 dark:text-darktext text-lighttext text-base text-center"
  >
    <button
      class="text-lightheading dark:text-darkheading self-end pr-16 py-16"
      id="close-mobile-menu"
    >
      X
    </button>
  </ul>
</div>

<style is:global>
  a:hover {
    text-decoration: underline;
    opacity: 0.8;
  }
</style>

<script>
  const navLinks = [
    { href: "/misc", text: "misc" },
    { href: "/about", text: "about" },
  ];

  const navLinksContainer = document.querySelector(".nav-links");
  const navLinksMobileContainer = document.querySelector(".nav-links-mobile");

  navLinks.forEach((link) => {
    const a = document.createElement("a");
    a.href = link.href;
    a.textContent = link.text;
    a.className = "md:block hidden";
    if (navLinksContainer) {
      navLinksContainer.insertBefore(a, navLinksContainer.lastElementChild);
    }

    const aMobile = a.cloneNode(true) as HTMLElement; // Type assertion here
    aMobile.className = "";
    if (navLinksMobileContainer) {
      navLinksMobileContainer.appendChild(aMobile);
    }
  });

  const mobileMenu = document.querySelector(".mobile-menu");
  const mobileMenuHidden = document.querySelector("#mobile-menu-hidden");
  const closeMobileMenu = document.querySelector("#close-mobile-menu");

  if (mobileMenu) {
    mobileMenu.addEventListener("click", () => {
      if (mobileMenuHidden) {
        mobileMenuHidden.classList.remove("hidden");
        mobileMenuHidden.classList.add("flex");
      }
    });
  }

  if (closeMobileMenu) {
    closeMobileMenu.addEventListener("click", () => {
      if (mobileMenuHidden) {
        mobileMenuHidden.classList.add("hidden");
        mobileMenuHidden.classList.remove("flex");
      }
    });
  }

  // Theme Switcher

  const themeSwitcher = document.getElementById("theme-switcher");
  const themeIcon = document.getElementById("theme-icon");

  function updateThemeIcon(theme: string) {
    if (!themeIcon) return;
    if (theme === "dark") {
      themeIcon.innerHTML =
        "<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none'><path d='M11 3C9.93914 4.06087 9.34315 5.49971 9.34315 7C9.34315 8.50029 9.93914 9.93913 11 11C12.0609 12.0609 13.4997 12.6569 15 12.6569C16.5003 12.6569 17.9391 12.0609 19 11C19 12.5822 18.5308 14.129 17.6518 15.4446C16.7727 16.7602 15.5233 17.7855 14.0615 18.391C12.5997 18.9965 10.9911 19.155 9.43928 18.8463C7.88743 18.5376 6.46197 17.7757 5.34315 16.6569C4.22433 15.538 3.4624 14.1126 3.15372 12.5607C2.84504 11.0089 3.00347 9.40034 3.60897 7.93853C4.21447 6.47672 5.23985 5.22729 6.55544 4.34824C7.87103 3.46919 9.41775 3 11 3Z' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/></svg>";
    } else if (theme === "light") {
      themeIcon.innerHTML =
        "<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 22 22' fill='none'><path d='M11 1V3M11 19V21M3.93 3.93L5.34 5.34M16.66 16.66L18.07 18.07M1 11H3M19 11H21M5.34 16.66L3.93 18.07M18.07 3.93L16.66 5.34M15 11C15 13.2091 13.2091 15 11 15C8.79086 15 7 13.2091 7 11C7 8.79086 8.79086 7 11 7C13.2091 7 15 8.79086 15 11Z'  stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/></svg>";
    } else {
      themeIcon.innerHTML =
        "<svg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none'><path d='M2 20H22M5 4H19C20.1046 4 21 4.89543 21 6V14C21 15.1046 20.1046 16 19 16H5C3.89543 16 3 15.1046 3 14V6C3 4.89543 3.89543 4 5 4Z'  stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/></svg>";
    }
  }

  function switchTheme() {
    const currentTheme = localStorage.getItem("theme") || "system";
    let newTheme;

    if (currentTheme === "light") {
      newTheme = "dark";
    } else if (currentTheme === "dark") {
      newTheme = "system";
    } else {
      newTheme = "light";
    }

    localStorage.setItem("theme", newTheme);
    updateThemeIcon(newTheme);
    applyTheme(newTheme);
  }

  function applyTheme(theme: string) {
    if (theme === "dark") {
      document.documentElement.classList.add("dark");
    } else if (theme === "light") {
      document.documentElement.classList.remove("dark");
    } else {
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    }
  }

  // Initialize theme on load
  const savedTheme = localStorage.getItem("theme") || "system";
  applyTheme(savedTheme);
  updateThemeIcon(savedTheme);

  if (themeSwitcher) {
    themeSwitcher.addEventListener("click", switchTheme);
  }
</script>
